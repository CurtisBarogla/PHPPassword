<?php
//StrictType
declare(strict_types = 1);

/*
 * Ness
 * Password component
 *
 * Author CurtisBarogla <curtis_barogla@outlook.fr>
 *
 */

namespace Ness\Component\Password\Topology\Loader\Cache;

use Ness\Component\Password\Topology\Loader\PasswordTopologyLoaderInterface;

/**
 * Extend basic interface to provide invalidation of generator collections fetched from a cache
 * 
 * @author CurtisBarogla <curtis_barogla@outlook.fr>
 *
 */
interface CacheablePasswordTopologyLoaderInterface extends PasswordTopologyLoaderInterface
{
    
    /**
     * Key to respect when interacting with a cache component
     * 
     * @var string
     */
    public const CACHE_KEY_PATTERN = "NESS_CACHE_TOPOLOGY_LOADER_{:generator:}_LIMIT_{:limit:}";
    
    /**
     * Try to invalidate collection from generator fetched from a cache component
     * 
     * @param string|null $generator
     *   Generator identifier to invalidate or null to invalid all generators
     * 
     * @return bool
     *   True if the cached collection generated by the given generator has been invalidate. False otherwise
     */
    public function invalidate(?string $generator): bool;
    
}
